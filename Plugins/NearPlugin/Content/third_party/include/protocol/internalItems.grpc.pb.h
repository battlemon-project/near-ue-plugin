// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: internalItems.proto
#ifndef GRPC_internalItems_2eproto__INCLUDED
#define GRPC_internalItems_2eproto__INCLUDED

#include "internalItems.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace game {
namespace battlemon {
namespace items {
namespace internal {

class InternalItemsService final {
 public:
  static constexpr char const* service_full_name() {
    return "game.battlemon.items.internal.InternalItemsService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status InternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::items::internal::InternalLemonsInfoResponse>> AsyncInternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::items::internal::InternalLemonsInfoResponse>>(AsyncInternalGetLemonsInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::items::internal::InternalLemonsInfoResponse>> PrepareAsyncInternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::items::internal::InternalLemonsInfoResponse>>(PrepareAsyncInternalGetLemonsInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status InternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::game::battlemon::common::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>> AsyncInternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>>(AsyncInternalInitUserItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>> PrepareAsyncInternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>>(PrepareAsyncInternalInitUserItemsRaw(context, request, cq));
    }
    virtual ::grpc::Status InternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::game::battlemon::common::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>> AsyncInternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>>(AsyncInternalRemoveUserItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>> PrepareAsyncInternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>>(PrepareAsyncInternalRemoveUserItemsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void InternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::game::battlemon::common::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::game::battlemon::common::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void InternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::game::battlemon::common::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void InternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::game::battlemon::common::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::items::internal::InternalLemonsInfoResponse>* AsyncInternalGetLemonsInfoRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::items::internal::InternalLemonsInfoResponse>* PrepareAsyncInternalGetLemonsInfoRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>* AsyncInternalInitUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>* PrepareAsyncInternalInitUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>* AsyncInternalRemoveUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::game::battlemon::common::Empty>* PrepareAsyncInternalRemoveUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status InternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::items::internal::InternalLemonsInfoResponse>> AsyncInternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::items::internal::InternalLemonsInfoResponse>>(AsyncInternalGetLemonsInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::items::internal::InternalLemonsInfoResponse>> PrepareAsyncInternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::items::internal::InternalLemonsInfoResponse>>(PrepareAsyncInternalGetLemonsInfoRaw(context, request, cq));
    }
    ::grpc::Status InternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::game::battlemon::common::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>> AsyncInternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>>(AsyncInternalInitUserItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>> PrepareAsyncInternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>>(PrepareAsyncInternalInitUserItemsRaw(context, request, cq));
    }
    ::grpc::Status InternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::game::battlemon::common::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>> AsyncInternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>>(AsyncInternalRemoveUserItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>> PrepareAsyncInternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>>(PrepareAsyncInternalRemoveUserItemsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void InternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void InternalGetLemonsInfo(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::game::battlemon::common::Empty* response, std::function<void(::grpc::Status)>) override;
      void InternalInitUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::game::battlemon::common::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void InternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::game::battlemon::common::Empty* response, std::function<void(::grpc::Status)>) override;
      void InternalRemoveUserItems(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::game::battlemon::common::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::game::battlemon::items::internal::InternalLemonsInfoResponse>* AsyncInternalGetLemonsInfoRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::game::battlemon::items::internal::InternalLemonsInfoResponse>* PrepareAsyncInternalGetLemonsInfoRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>* AsyncInternalInitUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>* PrepareAsyncInternalInitUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>* AsyncInternalRemoveUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::game::battlemon::common::Empty>* PrepareAsyncInternalRemoveUserItemsRaw(::grpc::ClientContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_InternalGetLemonsInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_InternalInitUserItems_;
    const ::grpc::internal::RpcMethod rpcmethod_InternalRemoveUserItems_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response);
    virtual ::grpc::Status InternalInitUserItems(::grpc::ServerContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::game::battlemon::common::Empty* response);
    virtual ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::game::battlemon::common::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_InternalGetLemonsInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InternalGetLemonsInfo() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_InternalGetLemonsInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInternalGetLemonsInfo(::grpc::ServerContext* context, ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::game::battlemon::items::internal::InternalLemonsInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InternalInitUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InternalInitUserItems() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_InternalInitUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalInitUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInternalInitUserItems(::grpc::ServerContext* context, ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::game::battlemon::common::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InternalRemoveUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_InternalRemoveUserItems() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_InternalRemoveUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInternalRemoveUserItems(::grpc::ServerContext* context, ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::game::battlemon::common::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_InternalGetLemonsInfo<WithAsyncMethod_InternalInitUserItems<WithAsyncMethod_InternalRemoveUserItems<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_InternalGetLemonsInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InternalGetLemonsInfo() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::game::battlemon::items::internal::InternalLemonsInfoRequest, ::game::battlemon::items::internal::InternalLemonsInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* request, ::game::battlemon::items::internal::InternalLemonsInfoResponse* response) { return this->InternalGetLemonsInfo(context, request, response); }));}
    void SetMessageAllocatorFor_InternalGetLemonsInfo(
        ::grpc::MessageAllocator< ::game::battlemon::items::internal::InternalLemonsInfoRequest, ::game::battlemon::items::internal::InternalLemonsInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::game::battlemon::items::internal::InternalLemonsInfoRequest, ::game::battlemon::items::internal::InternalLemonsInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InternalGetLemonsInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InternalGetLemonsInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InternalInitUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InternalInitUserItems() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::game::battlemon::items::internal::InternalInitUserItemsRequest, ::game::battlemon::common::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* request, ::game::battlemon::common::Empty* response) { return this->InternalInitUserItems(context, request, response); }));}
    void SetMessageAllocatorFor_InternalInitUserItems(
        ::grpc::MessageAllocator< ::game::battlemon::items::internal::InternalInitUserItemsRequest, ::game::battlemon::common::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::game::battlemon::items::internal::InternalInitUserItemsRequest, ::game::battlemon::common::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InternalInitUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalInitUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InternalInitUserItems(
      ::grpc::CallbackServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_InternalRemoveUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_InternalRemoveUserItems() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::game::battlemon::items::internal::InternalRemoveUserItemsRequest, ::game::battlemon::common::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* request, ::game::battlemon::common::Empty* response) { return this->InternalRemoveUserItems(context, request, response); }));}
    void SetMessageAllocatorFor_InternalRemoveUserItems(
        ::grpc::MessageAllocator< ::game::battlemon::items::internal::InternalRemoveUserItemsRequest, ::game::battlemon::common::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::game::battlemon::items::internal::InternalRemoveUserItemsRequest, ::game::battlemon::common::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_InternalRemoveUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InternalRemoveUserItems(
      ::grpc::CallbackServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_InternalGetLemonsInfo<WithCallbackMethod_InternalInitUserItems<WithCallbackMethod_InternalRemoveUserItems<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_InternalGetLemonsInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InternalGetLemonsInfo() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_InternalGetLemonsInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InternalInitUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InternalInitUserItems() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_InternalInitUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalInitUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InternalRemoveUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_InternalRemoveUserItems() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_InternalRemoveUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_InternalGetLemonsInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InternalGetLemonsInfo() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_InternalGetLemonsInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInternalGetLemonsInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InternalInitUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InternalInitUserItems() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_InternalInitUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalInitUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInternalInitUserItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_InternalRemoveUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_InternalRemoveUserItems() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_InternalRemoveUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInternalRemoveUserItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InternalGetLemonsInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InternalGetLemonsInfo() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InternalGetLemonsInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_InternalGetLemonsInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InternalGetLemonsInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InternalInitUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InternalInitUserItems() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InternalInitUserItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_InternalInitUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalInitUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InternalInitUserItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_InternalRemoveUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_InternalRemoveUserItems() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->InternalRemoveUserItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_InternalRemoveUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* InternalRemoveUserItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InternalGetLemonsInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InternalGetLemonsInfo() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::game::battlemon::items::internal::InternalLemonsInfoRequest, ::game::battlemon::items::internal::InternalLemonsInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::game::battlemon::items::internal::InternalLemonsInfoRequest, ::game::battlemon::items::internal::InternalLemonsInfoResponse>* streamer) {
                       return this->StreamedInternalGetLemonsInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InternalGetLemonsInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InternalGetLemonsInfo(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalLemonsInfoRequest* /*request*/, ::game::battlemon::items::internal::InternalLemonsInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInternalGetLemonsInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::game::battlemon::items::internal::InternalLemonsInfoRequest,::game::battlemon::items::internal::InternalLemonsInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InternalInitUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InternalInitUserItems() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::game::battlemon::items::internal::InternalInitUserItemsRequest, ::game::battlemon::common::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::game::battlemon::items::internal::InternalInitUserItemsRequest, ::game::battlemon::common::Empty>* streamer) {
                       return this->StreamedInternalInitUserItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InternalInitUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InternalInitUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalInitUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInternalInitUserItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::game::battlemon::items::internal::InternalInitUserItemsRequest,::game::battlemon::common::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InternalRemoveUserItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_InternalRemoveUserItems() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::game::battlemon::items::internal::InternalRemoveUserItemsRequest, ::game::battlemon::common::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::game::battlemon::items::internal::InternalRemoveUserItemsRequest, ::game::battlemon::common::Empty>* streamer) {
                       return this->StreamedInternalRemoveUserItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_InternalRemoveUserItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InternalRemoveUserItems(::grpc::ServerContext* /*context*/, const ::game::battlemon::items::internal::InternalRemoveUserItemsRequest* /*request*/, ::game::battlemon::common::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInternalRemoveUserItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::game::battlemon::items::internal::InternalRemoveUserItemsRequest,::game::battlemon::common::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_InternalGetLemonsInfo<WithStreamedUnaryMethod_InternalInitUserItems<WithStreamedUnaryMethod_InternalRemoveUserItems<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_InternalGetLemonsInfo<WithStreamedUnaryMethod_InternalInitUserItems<WithStreamedUnaryMethod_InternalRemoveUserItems<Service > > > StreamedService;
};

}  // namespace internal
}  // namespace items
}  // namespace battlemon
}  // namespace game


#endif  // GRPC_internalItems_2eproto__INCLUDED
